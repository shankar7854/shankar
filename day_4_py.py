# -*- coding: utf-8 -*-
"""day 4.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Y2kzgjqoKE10aTfB70lvK3JRu_HTrI0y
"""

shankar=[1,2,3,4,5]
shankar.append(4)
print(shankar)

shankar=[1,2,3,4,5]
shankar[1]=0
print(shankar)

shankar=[1,2,3,4,5]
shankar.remove(2)
print(shankar)

shankar=[1,2,3,4,5]
shankar.pop(2)
print(shankar)

shankar=[1,2,3,4,5]
shankar.insert(2,4)
print(shankar)

shankar=[1,2,3,4,5]
len("shankar")
print(shankar)

shankar=[1,2,3,4,5]
shankar.pop(2)
print(shankar)

shankar=[1,2,3,4,6,5]
shankar.sort()
print(shankar)

shankar=[1,2,3,4,6,5]
shankar.reverse()
print(shankar)

shankar=[1,2,3,4,6,5]
for i in shankar:
  print(i)

class Car:
    def __init__(self, brand, color):
        self.brand = brand
        self.color = color

    def show_details(self):
        print(f"This is a {self.color} {self.brand} car.")


my_car = Car("Toyota", "Red")
my_car.show_details()
        self.color = color

    def show_details(self):
        print(f"This is a {self.color} {self.brand} car.")


my_car = Car("Toyota", "Red")
my_car.show_details()

class Car:
    def __init__(self, brand, color):
        self.brand = brand
        self.color = color

    def show_details(self):
        print(f"This is a {self.color} {self.brand} car.")


my_car = Car("Toyota", "Red")
my_car.show_details()
# The second definition of show_details and the following lines were likely pasted in by mistake, remove them
#        self.color = color
#
#    def show_details(self):
#        print(f"This is a {self.color} {self.brand} car.")
#
#
#my_car = Car("Toyota", "Red")
#my_car.show_details()

numbers=[1,2,3,4,5]
print(numbers)

my_list = [10, 20, 30, 40, 50]

first_element = my_list[0]
last_element = my_list[-1]


middle_index = len(my_list) // 2
middle_element = my_list[middle_index]

print("First element:", first_element)
print("Last element:", last_element)
print("Middle element:", middle_element)

my_list = [10, 20, 30, 40, 50]
my_list.remove(30)
removed_element = my_list.pop(2)

print("List after removing 30:", my_list)
print("Removed element using pop():", removed_element)

my_list = [10, 20, 30, 40, 50]

my_list.append(60)

my_list.insert(2, 25)

print("Updated list:", my_list)

my_list = [10, 20, 30, 40, 50]

my_list.remove(30)

popped_element = my_list.pop(2)

print("Updated list after remove():", my_list)
print("Popped element using pop():", popped_element)

numbers = [50, 10, 30, 20, 40]

ascending_order = sorted(numbers)

descending_order = sorted(numbers, reverse=True)

print("Sorted in ascending order:", ascending_order)
print("Sorted in descending order:", descending_order)

my_list = [10, 20, 30, 40, 50]

reversed_list = my_list[::-1]

print("Reversed list:", reversed_list)

def calculate_sum(my_list):
    total = sum(my_list)
    return total

numbers = [10, 20, 30, 40, 50]
result = calculate_sum(numbers)

print("Sum of all elements:", result)

def find_largest_smallest(my_list):
    largest = max(my_list)
    smallest = min(my_list)
    return largest, smallest

numbers = [10, 20, 30, 40, 50]
largest, smallest = find_largest_smallest(numbers)

print("Largest number:", largest)
print("Smallest number:", smallest)

def count_occurrences(my_list, element):
    count = my_list.count(element)
    return count

numbers = [10, 20, 30, 20, 50, 20]
element_to_count = 20
occurrences = count_occurrences(numbers, element_to_count)

print(f"The element {element_to_count} appears {occurrences} times in the list.")

def merge_and_remove_duplicates(list1, list2):
    merged_list = list1 + list2
    unique_list = list(set(merged_list))
    return unique_list

list1 = [10, 20, 30, 40, 50]
list2 = [30, 40, 60, 70]

merged_unique_list = merge_and_remove_duplicates(list1, list2)

print("Merged list without duplicates:", merged_unique_list)

my_list = [1, 2, 3, 4, 5]
result = sum(my_list)
print(result)

my_tuple = (10, 20, 30, 40, 50)


print("Element at index 0:", my_tuple[0])
print("Element at index 1:", my_tuple[1])
print("Element at index 2:", my_tuple[2])
print("Element at index 3:", my_tuple[3])
print("Element at index 4:", my_tuple[4])

my_tuple = (10, 20, 30, 40, 50)

print("Element at index 0:", my_tuple[0])
print("Element at index 1:", my_tuple[1])
print("Element at index 2:", my_tuple[2])
print("Element at index 3:", my_tuple[3])
print("Element at index 4:", my_tuple[4])

my_tuple = (10, 20, 30, 40, 50)

a, b, c, d, e = my_tuple
print("Unpacked values:", a, b, c, d, e)

my_tuple = (10, 20, 30)
a, b, c = my_tuple
print("a:", a)
print("b:", b)
print("c:", c)

my_tuple = (1, 2, 3, 4)
my_list = list(my_tuple)
print("Tuple to List:", my_list)
my_list = [5, 6, 7, 8]
my_tuple = tuple(my_list)
print("List to Tuple:", my_tuple)

tuple1 = (1, 2, 3)
tuple2 = (4, 5, 6)
result = tuple1 + tuple2
print("Concatenated Tuple:", result)

